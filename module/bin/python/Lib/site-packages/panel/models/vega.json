{"code": "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar p = require(\"core/properties\");\nvar layout_dom_1 = require(\"models/layouts/layout_dom\");\nvar VegaPlotView = /** @class */ (function (_super) {\n    __extends(VegaPlotView, _super);\n    function VegaPlotView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    VegaPlotView.prototype.initialize = function (options) {\n        var _this = this;\n        _super.prototype.initialize.call(this, options);\n        var vega_url = \"https://cdn.jsdelivr.net/npm/vega@4.2.0?noext\";\n        var vega_lite_url = \"https://cdn.jsdelivr.net/npm/vega-lite@3.0.0-rc4?noext\";\n        var vega_embed_url = \"https://cdn.jsdelivr.net/npm/vega-embed@3.18.2?noext\";\n        this._initialized = false;\n        if (window.vega) {\n            this._init();\n        }\n        else if ((window.Jupyter !== undefined) && (window.Jupyter.notebook !== undefined)) {\n            window.requirejs.config({\n                paths: {\n                    \"vega-embed\": vega_embed_url,\n                    \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n                    \"vega-lite\": vega_lite_url,\n                    \"vega\": vega_url\n                }\n            });\n            var that = this;\n            window.require([\"vega-embed\", \"vega\", \"vega-lite\"], function (vegaEmbed, vega, vegaLite) {\n                window.vega = vega;\n                window.vl = vegaLite;\n                window.vegaEmbed = vegaEmbed;\n                that._init();\n            });\n        }\n        else {\n            var init_1 = function () { _this._init(); };\n            var load_vega_embed_1 = function () { _this._add_script(vega_embed_url, init_1); };\n            var load_vega_lite = function () { _this._add_script(vega_lite_url, load_vega_embed_1); };\n            this._add_script(vega_url, load_vega_lite);\n        }\n    };\n    VegaPlotView.prototype._add_script = function (url, callback) {\n        var script = document.createElement('script');\n        script.src = url;\n        script.async = false;\n        script.onreadystatechange = script.onload = callback;\n        document.querySelector(\"head\").appendChild(script);\n    };\n    VegaPlotView.prototype.get_width = function () {\n        return undefined;\n    };\n    VegaPlotView.prototype.get_height = function () {\n        return undefined;\n    };\n    VegaPlotView.prototype._init = function () {\n        this._plot();\n        this._initialized = true;\n        this.connect(this.model.properties.data.change, this._plot);\n    };\n    VegaPlotView.prototype._fetch_datasets = function () {\n        var datasets = {};\n        for (var ds in this.model.data_sources) {\n            var cds = this.model.data_sources[ds];\n            var data = [];\n            var columns = cds.columns();\n            for (var i = 0; i < cds.data[columns[0]].length; i++) {\n                var item = {};\n                for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n                    var column = columns_1[_i];\n                    item[column] = cds.data[column][i];\n                }\n                data.push(item);\n            }\n            datasets[ds] = data;\n        }\n        return datasets;\n    };\n    VegaPlotView.prototype.render = function () {\n        _super.prototype.render.call(this);\n    };\n    VegaPlotView.prototype._plot = function () {\n        if (!('datasets' in this.model.data)) {\n            var datasets = this._fetch_datasets();\n            if ('data' in datasets) {\n                this.model.data.data['values'] = datasets['data'];\n                delete datasets['data'];\n            }\n            this.model.data['datasets'] = datasets;\n        }\n        vegaEmbed(this.el, this.model.data, { actions: false });\n    };\n    return VegaPlotView;\n}(layout_dom_1.LayoutDOMView));\nexports.VegaPlotView = VegaPlotView;\nvar VegaPlot = /** @class */ (function (_super) {\n    __extends(VegaPlot, _super);\n    function VegaPlot(attrs) {\n        return _super.call(this, attrs) || this;\n    }\n    VegaPlot.initClass = function () {\n        this.prototype.type = \"VegaPlot\";\n        this.prototype.default_view = VegaPlotView;\n        this.define({\n            data: [p.Any],\n            data_sources: [p.Any],\n        });\n    };\n    return VegaPlot;\n}(layout_dom_1.LayoutDOM));\nexports.VegaPlot = VegaPlot;\nVegaPlot.initClass();\n", "deps": ["core/properties", "models/layouts/layout_dom"], "hash": "7a72256551aed9675367988d3a6a9a8e9f7d6f6db136e2bcb35594f130fecead"}