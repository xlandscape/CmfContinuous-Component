{"code": "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar p = require(\"core/properties\");\nvar layout_dom_1 = require(\"models/layouts/layout_dom\");\nvar PlotlyPlotView = /** @class */ (function (_super) {\n    __extends(PlotlyPlotView, _super);\n    function PlotlyPlotView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PlotlyPlotView.prototype.initialize = function (options) {\n        var _this = this;\n        _super.prototype.initialize.call(this, options);\n        var url = \"https://cdn.plot.ly/plotly-latest.min.js\";\n        this._initialized = false;\n        if (window.Plotly) {\n            this._init();\n        }\n        else if ((window.Jupyter !== undefined) && (window.Jupyter.notebook !== undefined)) {\n            window.require.config({\n                paths: {\n                    Plotly: url.slice(0, -3)\n                }\n            });\n            var that = this;\n            window.require([\"Plotly\"], function (Plotly) {\n                window.Plotly = Plotly;\n                that._init();\n            });\n        }\n        else {\n            var script = document.createElement('script');\n            script.src = url;\n            script.async = false;\n            script.onreadystatechange = script.onload = function () { _this._init(); };\n            document.querySelector(\"head\").appendChild(script);\n        }\n    };\n    PlotlyPlotView.prototype.get_width = function () {\n        return this.model.data.layout.width;\n    };\n    PlotlyPlotView.prototype.get_height = function () {\n        return this.model.data.layout.height;\n    };\n    PlotlyPlotView.prototype._init = function () {\n        this._plot();\n        this._initialized = true;\n        this.connect(this.model.properties.data.change, this._plot);\n    };\n    PlotlyPlotView.prototype.render = function () {\n        _super.prototype.render.call(this);\n        if (this._initialized)\n            this._plot();\n    };\n    PlotlyPlotView.prototype._plot = function () {\n        for (var i = 0; i < this.model.data.data.length; i++) {\n            var trace = this.model.data.data[i];\n            var cds = this.model.data_sources[i];\n            for (var _i = 0, _a = cds.columns(); _i < _a.length; _i++) {\n                var column = _a[_i];\n                var shape = cds._shapes[column];\n                var array = cds.get_array(column);\n                if (shape.length > 1) {\n                    var arrays = [];\n                    for (var s = 0; s < shape[0]; s++) {\n                        arrays.push(array.slice(s * shape[1], (s + 1) * shape[1]));\n                    }\n                    array = arrays;\n                }\n                trace[column] = array;\n            }\n        }\n        Plotly.react(this.el, this.model.data.data, this.model.data.layout);\n    };\n    return PlotlyPlotView;\n}(layout_dom_1.LayoutDOMView));\nexports.PlotlyPlotView = PlotlyPlotView;\nvar PlotlyPlot = /** @class */ (function (_super) {\n    __extends(PlotlyPlot, _super);\n    function PlotlyPlot(attrs) {\n        return _super.call(this, attrs) || this;\n    }\n    PlotlyPlot.initClass = function () {\n        this.prototype.type = \"PlotlyPlot\";\n        this.prototype.default_view = PlotlyPlotView;\n        this.define({\n            data: [p.Any],\n            data_sources: [p.Array],\n        });\n    };\n    return PlotlyPlot;\n}(layout_dom_1.LayoutDOM));\nexports.PlotlyPlot = PlotlyPlot;\nPlotlyPlot.initClass();\n", "deps": ["core/properties", "models/layouts/layout_dom"], "hash": "082cb4ff58d5ebba817b6c2be6e22e709cca26c767eb15998080bec982d3a2af"}